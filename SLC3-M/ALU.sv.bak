module ALU(	input logic [1:0]	ALUK,
				input logic	[15:0]A, B,
				output logic[15:0]ALUout);
				
always_comb
begin
	ALUout <= 16'h0000;
	case(ALUK)
		2'b00: ALUout <= (A+B);
		2'b01: ALUout <= (A&B);
		2'b10: ALUout <= (~A);
		2'b11: ALUout <= A;	// unmodified register value for JMP
	endcase
end

endmodule
